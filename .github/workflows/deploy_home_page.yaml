name: Build and Deploy Homepage

on:
  # Run every day at 03:00 UTC
  schedule:
    - cron: '0 3 * * *'
  # Allow manual trigger
  workflow_dispatch:
  # Also run on pushes to main branch
  push:
    branches: [ main ]

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      GITHUB_PAGES: true
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Pages
        uses: actions/configure-pages@v4

      - name: Create homepage directory
        run: mkdir -p _site

      - name: Generate homepage using iFlow CLI
        uses: vibe-ideas/iflow-cli-action@main
        with:
          prompt: |
            请仅读取当前仓库的 README.md 文件内容（不要读取其他任何文件），将其转换为一个基于 Reveal.js 的精美幻灯片风格文档网站并保存为 _site/index.html。
            
            要求：
            
            1. 使用 Reveal.js 框架构建幻灯片展示，将 README 内容按逻辑结构拆分为多个幻灯片页面；
            
            2. 幻灯片结构设计：
               - 首页幻灯片：项目标题、副标题、GitHub 链接和项目简介
               - 功能特性幻灯片：突出展示主要功能和特点
               - 安装指南幻灯片：分步骤展示安装过程
               - 使用示例幻灯片：展示代码示例和配置说明
               - 高级功能幻灯片：展示进阶用法和最佳实践
               - 结尾幻灯片：致谢、贡献指南和联系方式；
            
            3. 使用现代化的 Reveal.js 主题和配置：
               - 启用水平和垂直导航
               - 配置幻灯片过渡动画效果（如 slide、fade、zoom）
               - 添加进度条和幻灯片计数器
               - 支持键盘导航和触摸手势
               - 启用自动播放功能（可暂停）
               - 添加幻灯片缩略图概览；
            
            4. 视觉设计采用超现实主义数字拼贴风格：
               - 使用鲜明的色彩对比和几何图形元素
               - 创建层次丰富的视觉效果，结合文本和图形元素
               - 运用不规则形状、透明度和重叠效果创造深度感
               - 采用动态背景和动画过渡增强视觉冲击力
               - 使用抽象图形和数字元素作为装饰元素
               - 确保整体设计具有艺术感和视觉吸引力；
            
            5. 字体大小和布局优化（重要）：
               - 标题字体大小：主标题使用 2.5em，副标题使用 1.8em，节标题使用 1.5em
               - 正文字体大小：使用 1.2em，确保在所有设备上清晰可读
               - 代码字体大小：使用 0.9em，避免代码块过大导致布局问题
               - 行高设置：正文使用 1.6 倍行高，标题使用 1.4 倍行高
               - 内容区域边距：为每张幻灯片设置合适的 padding（上下 60px，左右 40px）
               - 确保文字与背景有足够间距，避免遮挡和重叠
               - 限制每张幻灯片的内容量，避免信息过载
               - 为长代码块实现垂直滚动，而不是缩小字体；
            
            6. 代码展示优化：
               - 使用 Reveal.js 的代码高亮插件
               - 支持语法高亮（YAML、Bash、Markdown 等）
               - 添加行号和复制按钮
               - 代码块使用合适的最大高度（60vh）和滚动条
               - 实现代码片段的动画展示效果；
            
            7. 交互功能：
               - 添加导航菜单和章节跳转
               - 实现全屏模式和演讲者模式
               - 支持 ESC 键显示幻灯片概览
               - 添加分享和导出功能；
            
            8. 响应式设计：
               - 确保在桌面、平板和移动设备上的良好体验
               - 移动设备上适当减小字体大小但保持可读性
               - 适配不同屏幕尺寸的字体和布局
               - 优化触摸设备的交互体验；
            
            9. 技术实现：
                - 从 CDN 引入最新版本的 Reveal.js
                - 配置必要的插件（highlight.js、notes、zoom 等）
                - 添加自定义 CSS 样式增强视觉效果
                - 确保快速加载和流畅的动画性能；
            
            10. SEO 和可访问性：
                - 添加完整的 meta 标签和结构化数据
                - 确保键盘导航的可访问性
                - 添加 alt 文本和 aria 标签
                - 优化搜索引擎索引。
            
            请直接创建完整的 HTML 文件，使用内联 CSS 和 JavaScript，确保文件自包含且可以直接在浏览器中运行。
            
            项目地址为：https://github.com/yeshan333/vfox-lua
          api_key: ${{ secrets.IFLOW_API_KEY }}
          # settings_json: ${{ secrets.IFLOW_SETTINGS_JSON }}
          model: "Qwen3-Coder"
          timeout: "1800"
          extra_args: "--debug"

      - name: Verify reveal.js presentation was generated
        run: |
          if [ -f "_site/index.html" ]; then
            echo "Reveal.js presentation generated successfully!"
            echo "Checking for reveal.js content..."
            if grep -q "reveal.js" "_site/index.html"; then
              echo "✓ Reveal.js framework detected"
            else
              echo "⚠ Warning: Reveal.js framework not found in generated file"
            fi
            ls -la _site/
          else
            echo "Error: Presentation was not generated by iFlow"
            exit 1
          fi

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./_site

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
